---
interface Props {
  responsiveImage: {
    alt: string;
    aspectRatio: number;
    base64: string;
    height: number;
    src: string;
    srcSet: string;
    width: number;
  };
  loading?: "lazy" | "eager";
}

const { responsiveImage, loading = "lazy" } = Astro.props;

const sizes = [320, 576, 768, 992, 1200, 1400];

const getSrcSet = (src: string) => {
  return sizes
    .map((size) => {
      const url = new URL(src);
      url.searchParams.set("w", size.toString());
      return `${url.href} ${size}w`;
    })
    .join(", ");
};

const getSizes = () => {
  return sizes.map((size) => `(max-width: ${size}px) ${size}px`).join(", ");
};
---

<enhanced-image>
  <img
    src={responsiveImage.src}
    srcset={getSrcSet(responsiveImage.src)}
    sizes={getSizes()}
    alt={responsiveImage.alt ?? ""}
    height={responsiveImage.height}
    width={responsiveImage.width}
    {loading}
    style={{
      aspectRatio: responsiveImage.aspectRatio,
      backgroundImage: `url(${responsiveImage.base64})`
    }}
  />
</enhanced-image>

<script src="./Image.client.js"></script>

<style>
  img {
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    height: auto;
    height: auto;
  }
</style>
